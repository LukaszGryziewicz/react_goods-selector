{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","jam","App","state","selectedGoods","handleSelect","good","setState","prevState","removeFromSelected","filter","item","addToSelected","includes","clearSelected","createTitle","goods","length","firstGood","twoGoods","join","allGoodsExceptLast","slice","lastGood","this","noGoodsSelected","clearButtonClasses","classNames","className","type","onClick","map","isSelected","listItemClasses","selectButtonClasses","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2QAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,EAAcD,EAAgB,GAE9BE,E,4MACJC,MAAQ,CACNC,cAAe,CAACH,I,EAGlBI,aAAe,SAACC,GACd,IAAQF,EAAkB,EAAKD,MAAvBC,cAER,EAAKG,UAAS,SAACC,GACb,IAAMC,EAAqB,CACzBL,cAAeI,EAAUJ,cACtBM,QAAO,SAAAC,GAAI,OAAIA,IAASL,MAEvBM,EAAgB,CACpBR,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,KAG9C,OAAOF,EAAcS,SAASP,GAC1BG,EACAG,M,EAIRE,cAAgB,WACd,EAAKP,SAAS,CAAEH,cAAe,M,EAGjCW,YAAc,SAACC,GACb,IAAQC,EAAWD,EAAXC,OACFC,EAAoBF,EAAM,GAC1BG,EAAmBH,EAAMI,KAAK,SAC9BC,EAA6BL,EAAMM,MAAM,GAAI,GAChDF,KAAK,MACFG,EAAmBP,EAAMC,EAAS,GAExC,OAAQA,GACN,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUC,EAAV,gBACF,KAAK,EACH,MAAM,GAAN,OAAUC,EAAV,iBACF,QACE,MAAM,GAAN,OAAUE,EAAV,gBAAoCE,EAApC,mB,4CAIN,WAAU,IAAD,OACCnB,EAAkBoB,KAAKrB,MAAvBC,cACFqB,EAAoD,IAAzBrB,EAAca,OACzCS,EAAqBC,IACzB,cAAe,SACf,CACE,sBAAuBF,IAI3B,OACE,sBAAKG,UAAU,MAAf,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACGJ,KAAKT,YAAYX,KAEpB,wBACEyB,KAAK,SACLD,UAAWF,EACXI,QAAS,kBAAM,EAAKhB,iBAHtB,sBAQF,oBAAIc,UAAU,aAAd,SACG5B,EAAgB+B,KAAI,SAAAzB,GACnB,IAAM0B,EAAsB5B,EAAcS,SAASP,GAC7C2B,EAAkBN,IACtB,kBACA,CACE,4BAA6BK,IAG3BE,EAAsBP,IAC1B,cAAe,kBACf,CACE,wBAAyBK,IAI7B,OACE,qBAEEJ,UAAWK,EAFb,UAIG3B,EACD,wBACEuB,KAAK,SACLD,UAAWM,EACXJ,QAAS,kBACP,EAAKzB,aAAaC,IAJtB,SAOG0B,EAAa,SAAW,aAXtB1B,e,GAzFH6B,IAAMC,WA+GTlC,ICpIfmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.543639e1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nconst jam: string = goodsFromServer[8];\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: [jam],\n  };\n\n  handleSelect = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState((prevState) => {\n      const removeFromSelected = {\n        selectedGoods: prevState.selectedGoods\n          .filter(item => item !== good),\n      };\n      const addToSelected = {\n        selectedGoods: [...prevState.selectedGoods, good],\n      };\n\n      return selectedGoods.includes(good)\n        ? removeFromSelected\n        : addToSelected;\n    });\n  };\n\n  clearSelected = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  createTitle = (goods: string[]) => {\n    const { length } = goods;\n    const firstGood: string = goods[0];\n    const twoGoods: string = goods.join(' and ');\n    const allGoodsExceptLast: string = goods.slice(0, -1)\n      .join(', ');\n    const lastGood: string = goods[length - 1];\n\n    switch (length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${firstGood} is selected`;\n      case 2:\n        return `${twoGoods} are selected`;\n      default:\n        return `${allGoodsExceptLast} and ${lastGood} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const noGoodsSelected: boolean = selectedGoods.length === 0;\n    const clearButtonClasses = classNames(\n      'App__button', 'button',\n      {\n        'App__button--hidden': noGoodsSelected,\n      },\n    );\n\n    return (\n      <div className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            {this.createTitle(selectedGoods)}\n          </h1>\n          <button\n            type=\"button\"\n            className={clearButtonClasses}\n            onClick={() => this.clearSelected()}\n          >\n            Clear\n          </button>\n        </header>\n        <ul className=\"App__goods\">\n          {goodsFromServer.map(good => {\n            const isSelected: boolean = selectedGoods.includes(good);\n            const listItemClasses = classNames(\n              'App__goods-item',\n              {\n                'App__goods-item--selected': isSelected,\n              },\n            );\n            const selectButtonClasses = classNames(\n              'App__button', 'button is-small',\n              {\n                'App__button--selected': isSelected,\n              },\n            );\n\n            return (\n              <li\n                key={good}\n                className={listItemClasses}\n              >\n                {good}\n                <button\n                  type=\"button\"\n                  className={selectButtonClasses}\n                  onClick={() => (\n                    this.handleSelect(good)\n                  )}\n                >\n                  {isSelected ? 'Remove' : 'Select'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}